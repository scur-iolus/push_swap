Ne pas oublier fsanitize=address

https://github.com/o-reo/push_swap_visualizer
https://en.wikipedia.org/wiki/Analysis_of_algorithms


https://github.com/bycop/42-push_swap
https://githubmemory.com/repo/bycop/42-push-swap
https://github.com/wwatkins42/42_C_Projects/tree/master/Push_swap
https://gitlab.com/42-ecole/push_swap
https://github.com/jgoncalv/push_swap

https://github.com/elemarch/push-swap
https://medium.com/@jamierobertdawson/push-swap-the-least-amount-of-moves-with-two-stacks-d1e76a71789a

http://phoenix.yizimg.com/topics/push-swap

https://medium.com/@jamierobertdawson/push-swap-the-least-amount-of-moves-with-two-stacks-d1e76a71789a

https://www.youtube.com/watch?v=7KW59UO55TQ

https://stackoverflow.com/questions/5222730/why-is-merge-sort-preferred-over-quick-sort-for-sorting-linked-lists?noredirect=1&lq=1
https://stackoverflow.com/questions/33704858/sorting-2-linked-list-of-50000-numbers-with-a-limited-set-of-operations







Quick sort:


Merge sort:


Insertion sort:
- Supposed to solve the smallest sub-problem.
- O(n^2)
- wins for small problem sizes

Heap sort


Intro sort


Qsort


Insertion sort chunks of 32 elements, then merge sort those chunks
